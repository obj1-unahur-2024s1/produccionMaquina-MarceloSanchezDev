import registroProduccion.*

	describe "test de maquina"{
		test"algunDiaSeProdujo(cantidad): indica si el registro incluye al menos un día en el que se produjo, exactamente, la cantidad indicada de piezas."{
			assert.that(registroProduccion.algunDiaSeProdujo(49))
			assert.notThat(registroProduccion.algunDiaSeProdujo(52))
		}
		test"maximoValorDeProduccion(): el valor más alto de producción diaria incluido en el registro."{
			assert.equals(62,registroProduccion.maximoValorDeProduccion())
		}
		test"valoresDeProduccionPares(): los valores pares incluidos, en el mismo orden en que aparecen en el registro."{
			assert.equals([18,62],registroProduccion.valoresDeProduccionPares())
		}
		test"produccionEsAcotada(n1,n2): indica si en cada día de que se tiene registro, la producción se encuentra entre los valores indicados."{
			assert.that(registroProduccion.produccionEsAcotada(10,100))
			assert.notThat(registroProduccion.produccionEsAcotada(20,100))
		}
		test"produccionesSuperioresA(cuanto): los valores de producción que superan el valor indicado, en el mismo orden en que aparecen en el registro."{
			assert.equals([43,49,62,39],registroProduccion.produccionesSuperioresA(35))
		}
		test"produccionesSumando(n): la serie que resulta de sumar el valor indicado a cada valor de producción diaria incluido en el registro."{
			assert.equals([48,23,54,67,38,44],registroProduccion.produccionesSumando(5))
		}
		test"totalProducido(): el total de piezas producidas por la máquina, de acuerdo a la información incluida en el registro."{
			assert.equals(244,registroProduccion.totalProducido())
		}
		test"ultimoValorDeProduccion(): el último valor registrado."{
			assert.equals(39,registroProduccion.ultimoValorDeProduccion())
		}
		test"cantidadProduccionesMayorALaPrimera(): la cantidad de valores de producción diaria que superan a la producción indicada para el primer día de operación."{
			assert.equals(2,registroProduccion.cantidadProduccionesMayorALaPrimera())
		}
	}